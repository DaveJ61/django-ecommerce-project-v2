# Generated by Django 3.2.3 on 2021-08-27 16:19

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Required', max_length=255, verbose_name='name')),
                ('description', models.TextField(blank=True, help_text='Product Description', verbose_name='description')),
            ],
        ),
        migrations.CreateModel(
            name='ProductAttribute',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Required', max_length=255, verbose_name='name')),
                ('description', models.TextField(blank=True, help_text='Product Description', verbose_name='description')),
            ],
        ),
        migrations.CreateModel(
            name='ProductAttributeValue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('attributevalue', models.CharField(help_text='Required', max_length=255, null=True, verbose_name='value')),
                ('description', models.TextField(blank=True, help_text='Product Description', verbose_name='description')),
                ('attribute', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attribute', to='inventory.productattribute')),
            ],
        ),
        migrations.CreateModel(
            name='ProductType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Required', max_length=255, verbose_name='name')),
            ],
        ),
        migrations.CreateModel(
            name='ProductTypeAttributeValues',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('attributevalues', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attributevaluesss', to='inventory.productattributevalue')),
                ('producttype', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='producttype', to='inventory.producttype')),
            ],
        ),
        migrations.CreateModel(
            name='ProductInventory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sku', models.CharField(max_length=255, unique=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='inventory', to='inventory.product')),
            ],
        ),
        migrations.CreateModel(
            name='ProductAttributeValues',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('attributevalues', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attributevaluess', to='inventory.productattributevalue')),
                ('productinventory', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='productattributevaluess', to='inventory.productinventory')),
            ],
            options={
                'unique_together': {('attributevalues', 'productinventory')},
            },
        ),
        migrations.AddField(
            model_name='productattributevalue',
            name='productinventory',
            field=models.ManyToManyField(related_name='productattributevalues', through='inventory.ProductAttributeValues', to='inventory.ProductInventory'),
        ),
        migrations.AddField(
            model_name='productattributevalue',
            name='producttype',
            field=models.ManyToManyField(related_name='producttypeattributevalues', through='inventory.ProductTypeAttributeValues', to='inventory.ProductType'),
        ),
    ]
